FROM ubuntu:bionic

ENV DEBIAN_FRONTEND noninteractive

# Install utilities, protobuf and python3
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
      bash \
      ca-certificates \
      curl \
      git \
      jq \
      libprotobuf-dev \
      make \
      protobuf-compiler \
      python3 \
      python3-pip \
      unzip \
      wget \
      zip \
  && rm -rf /var/lib/apt/lists/* \
  && pip3 install --upgrade pip setuptools wheel \
  && which python3 \
  && python3 --version

# Install python3 grpcio
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
      build-essential \
      python3-dev \
  && rm -rf /var/lib/apt/lists/* \
  && pip3 install grpcio grpcio-tools protobuf
# 
WORKDIR /usr
# 
# Install go
#
ENV GOLANG_VERSION 1.12.2
#
RUN curl -L "https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz" | tar -xz -C /usr/local; \
    export PATH=/usr/local/go/bin:${PATH}; \
    which go; \
    go version

# 
ENV PATH /usr/local/go/bin:${PATH}
#
# Build grpc from source so that we can get grpc_cpp_plugin
# RUN set -eux\
#   && apt-get update \
#   && apt-get install -y --no-install-recommends \
#      build-essential \
#      automake \
#      autoconf \
#      libtool \
#      zlib1g-dev \
#   && rm -rf /var/lib/apt/lists/* \
#   && git clone -b $(curl -L https://grpc.io/release) https://github.com/grpc/grpc \
#   && cd grpc \
#   && git submodule update --init --recursive \
#   && make \
#   && make install \
#   && ldconfig -v /usr/local/lib \
#   && cd - \
#   && rm -rf grpc \
#   && apt-get purge \
#      build-essential \
#      automake \
#      autoconf \
#      libtool \
#      zlib1g-dev \
#   && apt-get autoremove \
#   && apt-get autoclean \
#   && apt-get clean \
#   && du -s -h -c /usr/local/*
#
#
ENV GO111MODULE=on
#
# go-task (replacement for make)
RUN ["/bin/bash", "-c", "set -o pipefail && curl -s https://taskfile.dev/install.sh | sh"]
# 
# # Go linter 
ENV GOLINTER_VERSION=1.15.0
RUN ["/bin/bash", "-c", \
   "set -o pipefail && curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v${GOLINTER_VERSION}" ]
#
RUN GOPATH=/usr/local go get github.com/golang/protobuf/proto \
  && GOPATH=/usr/local go get github.com/golang/protobuf/protoc-gen-go \
  && GOPATH=/usr/local go get github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway \
  && GOPATH=/usr/local go get github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger \
  && GOPATH=/usr/local go get golang.org/x/tools/cmd/goimports \
  && GOPATH=/usr/local go get -u github.com/go-delve/delve/cmd/dlv

ENV CGO_ENABLED=0
